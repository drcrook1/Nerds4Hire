/*
Deployment script for NerdsForHire.SQL

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "NerdsForHire.SQL"
:setvar DefaultFilePrefix "NerdsForHire.SQL"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)] COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[Jobs]...';


GO
CREATE TABLE [dbo].[Jobs] (
    [Id]           INT            NOT NULL,
    [Name]         NVARCHAR (50)  NOT NULL,
    [Description]  NVARCHAR (MAX) NOT NULL,
    [Pay]          FLOAT (53)     NOT NULL,
    [AssignedNerd] INT            NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[NerdSpecialtyRef]...';


GO
CREATE TABLE [dbo].[NerdSpecialtyRef] (
    [NerdId]      INT NOT NULL,
    [SpecialtyId] INT NOT NULL,
    [Id]          INT NOT NULL,
    CONSTRAINT [PK_NerdSpecialtyRef] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Specialty]...';


GO
CREATE TABLE [dbo].[Specialty] (
    [Id]          INT            NOT NULL,
    [Name]        NVARCHAR (50)  NOT NULL,
    [Description] NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Nerd]...';


GO
CREATE TABLE [dbo].[Nerd] (
    [Id]        INT            NOT NULL,
    [FirstName] NVARCHAR (50)  NOT NULL,
    [LastName]  NVARCHAR (50)  NOT NULL,
    [Specialty] INT            NOT NULL,
    [TagList]   NVARCHAR (MAX) NOT NULL,
    [githubId]  NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Jobs_Nerd]...';


GO
ALTER TABLE [dbo].[Jobs]
    ADD CONSTRAINT [FK_Jobs_Nerd] FOREIGN KEY ([AssignedNerd]) REFERENCES [dbo].[Nerd] ([Id]);


GO
PRINT N'Creating [dbo].[FK_NerdSpecialtyRef_Nerd]...';


GO
ALTER TABLE [dbo].[NerdSpecialtyRef]
    ADD CONSTRAINT [FK_NerdSpecialtyRef_Nerd] FOREIGN KEY ([NerdId]) REFERENCES [dbo].[Nerd] ([Id]);


GO
PRINT N'Creating [dbo].[FK_NerdSpecialtyRef_Specialty]...';


GO
ALTER TABLE [dbo].[NerdSpecialtyRef]
    ADD CONSTRAINT [FK_NerdSpecialtyRef_Specialty] FOREIGN KEY ([SpecialtyId]) REFERENCES [dbo].[Specialty] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Nerd_Specialty]...';


GO
ALTER TABLE [dbo].[Nerd]
    ADD CONSTRAINT [FK_Nerd_Specialty] FOREIGN KEY ([Specialty]) REFERENCES [dbo].[Specialty] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2671ea4a-7766-45b3-91f1-c540e52dcbc1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2671ea4a-7766-45b3-91f1-c540e52dcbc1')

GO

GO
PRINT N'Update complete.';


GO
